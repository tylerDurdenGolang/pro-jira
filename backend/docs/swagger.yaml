basePath: /
definitions:
  errs.StatusResponse:
    properties:
      status:
        type: string
    type: object
  errs.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.getAllListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.TodoCategory'
        type: array
    type: object
  handler.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.TodoCategory:
    properties:
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    required:
    - name
    type: object
  models.TodoItem:
    properties:
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  models.UpdateItemInput:
    properties:
      description:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  models.UpdateTodoCategory:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.User:
    properties:
      password:
        type: string
      username:
        description: Name     string `json:"name" binding:"required"`
        type: string
    required:
    - password
    - username
    type: object
host: localhost:5000
info:
  contact: {}
  description: API App for TodoCategories Application
  title: Todo App API
  version: "1.0"
paths:
  /api/categories/:id:
    put:
      consumes:
      - application/json
      description: update category by id
      operationId: update-category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Category Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTodoCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/errs.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Category
      tags:
      - categories
  /api/categories/:name:
    delete:
      consumes:
      - application/json
      description: delete category by name
      operationId: delete-category
      parameters:
      - description: Category Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/errs.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Category
      tags:
      - categories
  /api/items/:id:
    delete:
      consumes:
      - application/json
      description: delete item by id
      operationId: delete-item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/errs.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Item
      tags:
      - items
    get:
      consumes:
      - application/json
      description: get item by id
      operationId: get-item-by-id
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TodoItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Item By Id
      tags:
      - items
    post:
      consumes:
      - application/json
      description: create new item
      operationId: create-item
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.TodoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Item
      tags:
      - items
    put:
      consumes:
      - application/json
      description: update item by id
      operationId: update-item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Item Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/errs.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Item
      tags:
      - items
  /api/lists:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: create todo list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo list
      tags:
      - lists
  /api/lists/:id:
    get:
      consumes:
      - application/json
      description: get list by id
      operationId: get-list-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TodoCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List By Id
      tags:
      - lists
  /auth/logout:
    post:
      consumes:
      - application/json
      description: logout
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      summary: Logout
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errs.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errs.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/errs.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
